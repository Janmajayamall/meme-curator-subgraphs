type OracleFactory @entity {
	id: ID!
	oracleCount: BigInt!
	oracles: [Oracle!]! @derivedFrom(field: "factory")
}

type Market @entity {
	id: ID!

	# basic details
	oracle: Oracle!
	creator: Bytes!
	eventIdentifier: Bytes!
	marketIdentifier: Bytes!

	# market details
	tokenC: Bytes!
	feeNumerator: BigInt!
	feeDenominator: BigInt!
	# calculated
	fee: BigDecimal!

	# token ids
	oToken0Id: BigInt!
	oToken1Id: BigInt!
	sToken0Id: BigInt!
	sToken1Id: BigInt!

	# state details
	expireAtBlock: BigInt!
	donBufferEndsAtBlock: BigInt!
	resolutionEndsAtBlock: BigInt!
	donBufferBlocks: BigInt!
	resolutionBufferBlocks: BigInt!
	donEscalationCount: BigInt!
	donEscalationLimit: BigInt!
	outcome: BigInt!
	stage: BigInt!

	# outcome reserves
	outcomeReserve0: BigDecimal!
	outcomeReserve1: BigDecimal!
	# calculated
	probability0: BigDecimal!
	probability1: BigDecimal!

	# staking reserves
	stakingReserve0: BigDecimal!
	stakingReserve1: BigDecimal!

	# staking
	staker0: Bytes!
	staker1: Bytes!
	lastAmountStaked: BigDecimal!
	lastOutcomeStaked: BigInt!

	# history
	tradeHistory: [TradeHistory!]! @derivedFrom(field: "market")
	stakeHistory: [StakeHistory!]! @derivedFrom(field: "market")

	# positions
	tradePositions: [TradePosition!]! @derivedFrom(field: "market")
	stakePositions: [StakePosition!]! @derivedFrom(field: "market")

	# extra info
	users: [UserMarket!]! @derivedFrom(field: "market")
	timestamp: BigInt!
	tradeVolume: BigDecimal!
	stakeVolume: BigDecimal!
	totalVolume: BigDecimal!
	lastActionTimestamp: BigInt!
}

type User @entity {
	id: ID!

	tradeHistory: [TradeHistory!]! @derivedFrom(field: "user")
	stakeHistory: [StakeHistory!]! @derivedFrom(field: "user")
	tradePositions: [TradePosition!]! @derivedFrom(field: "user")
	stakePositions: [StakePosition!]! @derivedFrom(field: "user")
	markets: [UserMarket!]! @derivedFrom(field: "user")
}

type TradeHistory @entity {
	id: ID! # {user}-{market}
	user: User!
	market: Market!
	amount0: BigDecimal!
	amount1: BigDecimal!
	amountC: BigDecimal!
	timestamp: BigInt!
}

type StakeHistory @entity {
	id: ID! # {user}-{market}
	user: User!
	market: Market!
	amountC: BigDecimal!
	outcomeStaked: BigInt!
	timestamp: BigInt!
}

type TradePosition @entity {
	id: ID! # {user}-{market}
	user: User!
	market: Market!
	amount0: BigDecimal!
	amount1: BigDecimal!
	timestamp: BigInt!
}

type StakePosition @entity {
	id: ID! # {user}-{market}
	user: User!
	market: Market!
	amountC0: BigDecimal!
	amountC1: BigDecimal!
	timestamp: BigInt!
}

type UserMarket @entity {
	id: ID! # {user}-{market}
	user: User!
	market: Market!
	timestamp: BigInt!
}

type Oracle @entity {
	id: ID!
	delegate: Bytes!
	manager: Bytes!
	collateralToken: Bytes!
	isActive: Boolean
	feeNumerator: BigInt!
	feeDenominator: BigInt!
	donEscalationLimit: BigInt!
	expireBufferBlocks: BigInt!
	donBufferBlocks: BigInt!
	resolutionBufferBlocks: BigInt!

	tokenCReserve: [OracleTokenCReserve!]! @derivedFrom(field: "oracle")

	markets: [Market!]! @derivedFrom(field: "oracle")

	factory: OracleFactory!
}

type OracleTokenCReserve @entity {
	id: ID! # {oracleAddress}-{tokenCAddress}
	oracle: Oracle!
	tokenC: Bytes!
	reserve: BigDecimal!
}
