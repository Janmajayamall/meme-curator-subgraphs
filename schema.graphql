type MarketFactory @entity {
	id: ID!
	marketCount: BigInt!
	markets: [Market!]! @derivedFrom(field: "factory")
}

type Market @entity {
	id: ID!

	factory: MarketFactory!

	creator: Bytes!
	oracle: Bytes!
	identifier: Bytes!

	reserveC: BigDecimal!
	reserve0: BigDecimal!
	reserve1: BigDecimal!

	tokenC: Bytes!
	token0: Bytes!
	token1: Bytes!

	reserveDoN0: BigDecimal!
	reserveDoN1: BigDecimal!
	lastAmountStaked: BigDecimal!
	staker0: Bytes!
	staker1: Bytes!
	lastOutcomeStaked: BigInt!
	stakes: [Stake!]! @derivedFrom(field: "market")

	expireAtBlock: BigInt!
	donBufferEndsAtBlock: BigInt!
	resolutionEndsAtBlock: BigInt!
	expireBufferBlocks: BigInt!
	donBufferBlocks: BigInt!
	resolutionBufferBlocks: BigInt!
	donEscalationCount: BigInt!
	donEscalationLimit: BigInt!
	oracleFeeNumerator: BigInt!
	oracleFeeDenominator: BigInt!
	outcome: BigInt!
	stage: BigInt!
	oracleFee: BigDecimal!
	oracleFee1: BigDecimal!

	users: [UserMarket!]! @derivedFrom(field: "market")
}

type Stake @entity {
	id: ID! # {user}-{market}
	market: Market!
	user: User!
	stake0: BigDecimal!
	stake1: BigDecimal!
}

type User @entity {
	id: ID!
	markets: [UserMarket!]! @derivedFrom(field: "user")
}

type UserMarket @entity {
	id: ID! # {user}-{market}
	user: User!
	market: Market!
}
